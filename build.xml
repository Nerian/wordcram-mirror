<!--
Copyright 2010 Daniel Bernier

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!--
ngooglecode upload task: http://code.google.com/p/ant-googlecode/
svnant task: http://subclipse.tigris.org/svnant/svn.html#copy
-->

<project default="deploy">

	<property file="build.credentials.properties" />
	<property file="build.properties" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	<taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="lib/ant-googlecode/ant-googlecode-0.0.2.jar" name="gcupload" />
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml">
		<classpath>
			<fileset dir="lib/svnant">
				<include name="*.jar"/>
			</fileset>
		</classpath>
	</typedef> 
	
	<property name="classpath" value="lib/processing/core.jar" />

	<target name="clean">
		<delete dir="build" />
	</target>
	
	<target name="checkAllForLicenseNotice">
		
		<foreach target="checkForLicenseNotice" param="srcFile">
			<fileset dir=".">
				<include name="**/*.java" />
				<include name="**/*.xml" />
			</fileset>
		</foreach>
		
		<!-- TODO figure out why the <for> task isn't found.  It's in the ant-contrib jar...
		<for param="srcFile">
			<fileset dir=".">
				<include name="**/*.java" />
				<include name="**/*.xml" />
				<include name="**/*.pde" />
			</fileset>
			<sequential>
				<loadfile srcFile="${srcFile}" property="src" />
				<if>
					<not><contains string="${src}" substring="Copyright" /></not>
					<then>
						<echo>File ${srcFile} is missing its license notice!</echo>
					</then>
				</if>
			</sequential>
		</for>
		-->
	</target>
	
	<target name="checkForLicenseNotice">
		<loadfile srcFile="${srcFile}" property="src" />
		<if>
			<not><contains string="${src}" substring="Copyright" /></not>
			<then>
				<echo>File ${srcFile} is missing its license notice!</echo>
			</then>
		</if>
	</target>

	<target name="compile" depends="clean"> <!--, checkAllForLicenseNotice"> -->
		<mkdir dir="build/classes" />
		<javac srcdir="src" destdir="build/classes" classpath="${classpath}" source="1.5" target="1.5" includeantruntime="false" />
	</target>

	<target name="test" depends="compile">
		<mkdir dir="build/tests" />
		<javac srcdir="test" destdir="build/tests" classpath="${classpath};lib/junit/junit-4.8.2.jar;build/classes" includeantruntime="false" />
		<junit dir="build/tests" haltonfailure="true">
			<classpath path="lib/junit/junit-4.8.2.jar;build/classes;build/tests" />
			<formatter type="brief" usefile="false" />
			
			<batchtest fork="yes">
		        <fileset dir="test">
		            <include name="**/*Test*.java"/>
		        </fileset>
		    </batchtest>
		</junit>
	</target>

	<target name="deploy" depends="test">
		<mkdir dir="build/p5lib/wordcram/library" />
		<jar destfile="build/p5lib/wordcram/library/wordcram.jar" basedir="build/classes" />
		
		<mkdir dir="build/p5lib/wordcram/examples" />
		<copy todir="build/p5lib/wordcram/examples">
			<fileset dir="example" />
		</copy>
	</target>

	<target name="publish.local" depends="deploy">
		<copy todir="${processing.sketchFolder}/libraries/wordcram">
			<fileset dir="build/p5lib/wordcram" />
		</copy>
	</target>

	<target name="publish.daily" depends="deploy">
		<input message="Give us a quick summary for Google Code:" addproperty="publish.summary" />

		<tstamp>
			<format property="date" pattern="yyyyMMdd" />
		</tstamp>
		
		<property name="pub.file" value="wordcram.${date}"/>
		<tar destfile="build/${pub.file}.tar.gz" basedir="build/p5lib" compression="gzip" />
		<zip destfile="build/${pub.file}.zip" basedir="build/p5lib" />

		<gcupload
			username="${gc.username}" password="${gc.password}" projectname="wordcram" 
			filename="build/${pub.file}.tar.gz"
			targetfilename="${pub.file}.tar.gz" 
			summary="${publish.summary}" 
			labels="development, daily" />
		<gcupload 
			username="${gc.username}" password="${gc.password}" projectname="wordcram" 
			filename="build/${pub.file}.zip" 
			targetfilename="${pub.file}.zip" 
			summary="${publish.summary}" 
			labels="development, daily" />
	</target>
	
	<target name="publish.release" depends="deploy">
		<input message="Give us a quick summary for Google Code:" addproperty="publish.summary" />
		<input message="...and the release number:" addproperty="publish.releaseNumber" />
		
		<property name="pub.file" value="wordcram.${publish.releaseNumber}"/>
		<tar destfile="build/${pub.file}.tar.gz" basedir="build/p5lib" compression="gzip" />
		<zip destfile="build/${pub.file}.zip" basedir="build/p5lib" />

		<gcupload
			username="${gc.username}" password="${gc.password}" projectname="wordcram" 
			filename="build/${pub.file}.tar.gz"
			targetfilename="${pub.file}.tar.gz"  
			summary="${publish.summary}" 
			labels="release, stable, Featured" />
		<gcupload
			username="${gc.username}" password="${gc.password}" projectname="wordcram"
			filename="build/${pub.file}.zip"
			targetfilename="${pub.file}.zip"
			summary="${publish.summary}"
			labels="release, stable, Featured" />

		<svn>
			<info target="../trunk" propPrefix="trunk" />
		</svn>
		<svn>
			<info target="../tags" propPrefix="tags" />
		</svn>
		
		<svn username="${gc.username}" password="${gc.password}">
			<copy srcUrl="${trunk.url}" destUrl="${tags.url}/REL_${publish.releaseNumber}" message="Added release ${publish.releaseNumber}" />
		</svn>
	</target>

</project>
