Release notes for WordCram 0.4, date TBD:

* Word now has methods getProperty(String name) and 
  setProperty(String name, Object value).  These will probably be
  used only when you're using a custom WordPlacer, WordColorer, etc.
  The firstnamesUsingWordProperties example sketch shows how it works.
* Added printWhenSkippingWords() so you can see when WordCram
  either thinks a Word will be too small to see, or can't find a
  place for it.
* Deleted currentWord() and currentWordIndex(), which were deprecated.


Release notes for WordCram 0.3.1, 2010-11-10:

* Bug fix: in 0.3, the WordCram library folder under Processing was 
  renamed from wordcram to WordCram, but the .jar was still 
  wordcram.jar, so Processing didn't load it.  Renamed it to 
  WordCram.jar.


Release notes for WordCram 0.3, 2010-11-07:

* Added TextSource, so WordCram can count words from different kinds
  of source, including web pages and text files.
* Added a fluent API for building WordCrams: 
  new WordCram(this).forWebPage("{url}").sizedByWeight(10, 100).
* Added case-sensitive word counting, and the ability to exclude
  numeric words.
* Added javadoc comments for lots of classes -- more to come.
* Added Processing examples: in Processing, look under File >
  Sketchbook > libraries > WordCram > examples.
* Bug fix: issue 1, Stop-words with punctuation have no effect.
* Added StopWords.JAVA for making WordCrams from java source code.
* Added Anglers.heaped(), Anglers.randomBetween(min,max),
  Colorers.twoHuesRandomSatsOnWhite(), and
  Placers.horizBandAnchoredLeft().
* Deprecated old WordCram constructors, WordCram.currentWord(), and
  WordCram.currentWordIndex().
* Changed minimum shape size from 4 to 7, to speed up rendering.
* WaveWordPlacer and SwirlWordPlacer no longer randomly offset
  placement, so they should look crisper.
* Improved SpiralWordNudger's spiralling, so more words should show,
  and faster.
